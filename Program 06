import random

def generate_bigram_model(corpus):
    # Create a bigram model from the given corpus
    bigram_model = {}
    for i in range(len(corpus) - 1):
        current_word = corpus[i]
        next_word = corpus[i + 1]
        if current_word in bigram_model:
            bigram_model[current_word].append(next_word)
        else:
            bigram_model[current_word] = [next_word]
    return bigram_model

def generate_text(bigram_model, seed_word, length=10):
    # Generate text using the bigram model
    current_word = seed_word
    generated_text = [current_word]

    for _ in range(length - 1):
        if current_word in bigram_model:
            next_word_options = bigram_model[current_word]
            next_word = random.choice(next_word_options)
            generated_text.append(next_word)
            current_word = next_word
        else:
            break

    return ' '.join(generated_text)

# Example corpus (replace with your own dataset)
corpus = "this is a simple example of a bigram model for text generation".split()

# Generate a bigram model
bigram_model = generate_bigram_model(corpus)

# Generate text using the bigram model
generated_text = generate_text(bigram_model, seed_word="example", length=10)

print("Generated Text:", generated_text)
